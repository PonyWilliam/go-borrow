syntax = "proto3";

package borrow;

option go_package = "proto;borrow";
/*
  status状态约定：
  200：成功
  201：失败
  202：未知错误
*/
service Borrow {
  rpc Borrow(Borrow_Request)returns(Response);
  rpc Return(Returns_Request)returns(Response);
  rpc ToOther(to_other_request)returns(Response);
  rpc CheckToOther(to_other_request)returns(Response);
  rpc FindBorrowAll(Null_Request)returns(Borrowlogs_Response);
  rpc FindBorrowByID(ID_Request)returns(Borrowlog_Response);
  rpc FindBorrowByWID(WID_Request)returns(Borrowlogs_Response);
  rpc FindBorrowByPID(PID_Request)returns(Borrowlogs_Response);
  rpc TestLog(Null_Request)returns(Response_HashTest);
}
message Borrow_Request{
  int64 worker_id = 1;//借出人信息
  int64 product_id = 2;//借出产品信息
  int64 borrow_time = 3;//借出时间
  int64 schedule_time = 4;//预计归还时间
  int64 return_time = 5;
  string description = 6;//备注信息,转借等等说明
}
message Null_Request{

}
message ID_Request{
  int64 id = 1;
}
message WID_Request{
  int64 WID = 1;
}
message PID_Request{
  int64 PID = 1;
}
message Borrowlog_Response{
  /*
  	ID int64 `gorm:"primary_key;not_null;auto_increment;" json:"ID"`
    PID int64 `json:"pid"`//物品的id
    WID int64 `json:"wid"`//借出员工ID
    BorrowTime int64 `json:"borrow_time"`//出借时间
    ScheduleTime int64 `json:"schedule_time"`//预定归还时间
    ReturnTime int64 `json:"ReturnTime"`//实际归还时间,给0代表是借出并为归还。
    Description string `json:"Description"`
    BelongArea int64 `json:"belong_area"`//所属库房
    HashCode string `json:"hash_code"`//为了让管理人员不作弊的校验码,但实际上如果删库就会没有意义，除非与员工出借记录分开管理。所以还是得用区块链保证无法作弊。

  */
  int64 ID = 1;
  int64 PID = 2;
  int64 WID = 3;
  int64 BorrowTime = 4;
  int64 ScheduleTime = 5;
  int64 ReturnTime = 6;
  string Description = 7;
  int64 BelongArea = 8;
  bytes Hash = 9;
  bytes PreHash = 10;
}
message Borrowlogs_Response{
  repeated Borrowlog_Response logs = 1;
}
message Returns_Request{
  int64 id = 1;
}
message to_other_request{
  int64 id = 1;//物品已有记录
  int64 wid = 2;//其它人的id，方便变更
}
message Response{
  int64 status = 1;
  string message = 2;
}
message Response_HashTest{
  int64 id = 1;
}
/*
package model
type Product struct{
	ID int64 `gorm:"primary_key;not_null;auto_increment"`
	ProductName string `json:"product_name"`
	ProductDescription string `json:"product_description"`
	Level int64 `json:"level"`
	Category int64 `json:"category"`//指向categoryid
	Important bool `json:"important"`//说明是否重要
	Is bool `json:"is"`//是否在库
	BelongCustom int64 `json:"belong_custom"`//当前所属用户ID
	BelongArea int64 `json:"belong_area"`//所属库房
	Location string `json:"location"`//最新的定位信息
	Rfid string `json:"rfid"`//rfid标记
	ImageID int64 `json:"image_id"`//图片地址对应的id（可上传）
}

*/
